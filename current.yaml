apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"test":"readiness"},"name":"readiness-http","namespace":"default"},"spec":{"containers":[{"image":"registry.k8s.io/e2e-test-images/agnhost:2.40","name":"readiness","readinessProbe":{"httpGet":{"path":"/health","port":80},"initialDelaySeconds":10,"periodSeconds":10}}]}}
  creationTimestamp: "2025-01-19T21:31:51Z"
  labels:
    test: readiness
  name: readiness-http
  namespace: default
  resourceVersion: "50200"
  uid: 87e3f766-8fbe-4fcc-a26f-de78f74fa5b9
spec:
  containers:
  - image: registry.k8s.io/e2e-test-images/agnhost:2.40
    imagePullPolicy: IfNotPresent
    name: readiness
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 80
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8qnx5
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-8qnx5
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-19T21:31:53Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-19T21:31:51Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-19T21:31:51Z"
    message: 'containers with unready status: [readiness]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-19T21:31:51Z"
    message: 'containers with unready status: [readiness]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-19T21:31:51Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://63f2e9215228ac80e025d043376e8e1c4a060074d50333ead3a0011716130ebc
    image: registry.k8s.io/e2e-test-images/agnhost:2.40
    imageID: docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:af7e3857d87770ddb40f5ea4f89b5a2709504ab1ee31f9ea4ab5823c045f2146
    lastState: {}
    name: readiness
    ready: false
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-19T21:31:52Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8qnx5
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.83.140
  hostIPs:
  - ip: 192.168.83.140
  phase: Running
  podIP: 10.244.0.30
  podIPs:
  - ip: 10.244.0.30
  qosClass: BestEffort
  startTime: "2025-01-19T21:31:51Z"
